package net.su.custmr.dataAccessObject;

import java.math.BigInteger;
import java.util.List;
import java.util.logging.Logger;

import net.su.custmr.valueObject.CustmrValueObject;
import net.su.custmr.valueObject.OrdrValueObject;
import net.su.custmr.valueObject.PushValueObject;

import org.mybatis.spring.support.SqlSessionDaoSupport;
import org.springframework.stereotype.Repository;

@Repository
public class PushDataAccessObject extends SqlSessionDaoSupport{

	//푸시 메인 일일 통계
	public PushValueObject pushNotfcatnDayStatstcs()throws Exception{
		return getSqlSession().selectOne("pushMapper.pushNotfcatnDayStatstcs");
	}
	//푸시 메인 주 통계
	public PushValueObject pushNotfcatnWekStatstcs()throws Exception{
		return getSqlSession().selectOne("pushMapper.pushNotfcatnWekStatstcs");
	}
	//푸시 메인 달 통계
	public PushValueObject pushNotfcatnMonthStatstcs()throws Exception{
		return getSqlSession().selectOne("pushMapper.pushNotfcatnMonthStatstcs");
	}
	//푸시 메인 그래프
	public List<PushValueObject> pushNotfcatnStatstcsGraph(int dateOption)throws Exception{
		return getSqlSession().selectList("pushMapper.pushNotfcatnStatstcsGraph",dateOption);
	}
	//푸시 메인 그래프 통계 합계
	public PushValueObject pushNotfcatnStatstcsGraphSum(int dateOption)throws Exception{
		return getSqlSession().selectOne("pushMapper.pushNotfcatnStatstcsGraphSum",dateOption);
	}
	//푸시알람 템플릿 조회
	public List<PushValueObject> pushNotfcatnList(PushValueObject pushVo)throws Exception{
		System.out.println("푸시알림 텟플릿 조회 검색 DAO"+pushVo.getSearchWrd());
		System.out.println("푸시알림 텟플릿 조회 검색 DAO"+pushVo.getSearchCnd());
		return getSqlSession().selectList("pushMapper.pushNotfcatnList", pushVo);
	}
	//
	public int selectpushTempltCount(PushValueObject pushVo)throws Exception{
		int selectpushTempltCount = getSqlSession().selectOne("pushMapper.selectpushTempltCount", pushVo);	
		return selectpushTempltCount;
	}
	
	public void pushNotfcatTempltInsert(PushValueObject pushVo)throws Exception{
		System.out.println("푸시알림 템플릿 등록 DAO");
		
		getSqlSession().insert("pushMapper.pushNotfcatTempltInsert", pushVo);
	}
	//푸시알림 템플릿 상세조회
	public PushValueObject pushNotfcatnTempltSelectDetl(int getPushNotfcatnSeq)throws Exception{
		System.out.println("푸시알림 템플릿 조쇠"+getPushNotfcatnSeq);
		return getSqlSession().selectOne("pushMapper.pushNotfcatnTempltSelectDetl", getPushNotfcatnSeq);
	}
	//푸시알림 템플릿 삭제
	public void pushTempltDelete(String[] data)throws Exception{
		System.out.println("푸시알림 템플릿 삭제");
		for (int i=0; i<data.length; i++){
			long gropPurchsSeq = Long.parseLong(data[i]);
			getSqlSession().delete("pushMapper.pushTempltDelete", gropPurchsSeq);	
		}	
	}
	//푸시 템플릿 수정
	public void pushNotfcatnTempltUpdate(PushValueObject pushVo)throws Exception{
		System.out.println("템플릿 수정 Dao"+pushVo.getTitl());
		getSqlSession().update("pushMapper.pushNotfcatnTempltUpdate", pushVo);
	}
	//푸시 수신자 고객 전체 수
	public int pushRecpntAllCount(PushValueObject pushVo)throws Exception{
		return getSqlSession().selectOne("pushMapper.pushRecpntAllCount", pushVo);
	}
	//푸시 수신자 전체 조회
	public List<OrdrValueObject> pushRecpntAll(PushValueObject pushVo)throws Exception{
		
		return getSqlSession().selectList("pushMapper.pushRecpntAll", pushVo);
	}
	//푸시 수신자 상품 총 갯수
	public int pushRecpntProdctAll(PushValueObject pushVo)throws Exception{
		return getSqlSession().selectOne("pushMapper.pushRecpntProdctAll", pushVo);
	}
	//푸시 수신자 상품 조회
	public List<PushValueObject> pushRecpntProdct(PushValueObject pushVo)throws Exception{
		return getSqlSession().selectList("pushMapper.pushRecpntProdct", pushVo);
	}
	//푸시 수신자 상품선택 고객 총 갯수
	public int pushVoRecpntProdctCustmrAll(PushValueObject pushVoRecpntProdctCustmrAll)throws Exception{
		logger.info("푸시 수신자 상품선택 고객 총 갯수");
		return getSqlSession().selectOne("pushMapper.pushVoRecpntProdctCustmrAll", pushVoRecpntProdctCustmrAll);
	}
	//푸시 수신자 상품선택 고객 조회
	public List<PushValueObject> pushRecpntProdctCustmr(BigInteger prodctSeq)throws Exception{
		logger.info("푸시 수신자 상품 선택 고객 리스트 조회"+prodctSeq);
		return getSqlSession().selectList("pushMapper.pushRecpntProdctCustmr", prodctSeq);
	}
	//푸시 수신자 패키지 총 갯수
	public int pushRecpntPackgAll(PushValueObject pushVo)throws Exception{
		logger.info("푸시 수신자 패키지 총 갯수 조회");
		return getSqlSession().selectOne("pushMapper.pushRecpntPackgAll", pushVo);
	}
	//푸시 수신자 패키지 조회
	public List<PushValueObject> pushRecpntPackg(PushValueObject pushVo)throws Exception{
		return getSqlSession().selectList("pushMapper.pushRecpntPackg", pushVo);
	}
	//푸시 수신자 패키지 신청 총 개수
	public int pushRecpntPackgAplctnAll(PushValueObject pushVo)throws Exception{
		return getSqlSession().selectOne("pushMapper.pushRecpntPackgAplctnAll", pushVo);
	}
	//푸시 수신자 패키지 신청 고객
	public List<PushValueObject> pushRecpntPackgAplctnCustmr(PushValueObject pushRecpntPackgAplctnPushVo) throws Exception{
		return getSqlSession().selectList("pushMapper.pushRecpntPackgAplctnCustmr", pushRecpntPackgAplctnPushVo);
	}
	//푸시 수신자 공용구매 총 갯수
	public int pushRecpntGropPurchsAll(PushValueObject pushVo)throws Exception{
		return getSqlSession().selectOne("pushMapper.pushRecpntGropPurchsAll", pushVo);
	}
	//푸시 수신자 공용구매
	public List<PushValueObject> pushRecpntGropPurchs(PushValueObject pushVo) throws Exception{
		return getSqlSession().selectList("pushMapper.pushRecpntGropPurchs", pushVo);
	}
	//푸시 수신자 공용구매 신청 고객 총 갯수
	public int pushRecpntGropPurchsAplctnCustmrCount(PushValueObject pushVo)throws Exception{
		return getSqlSession().selectOne("pushMapper.pushRecpntGropPurchsAplctnCustmrCount", pushVo);
	}
	//푸시 수신자 공동구매 신청 고객
	public List<PushValueObject> pushRecpntGropPurchsAplctnCustmr(int gropPurchsSeq) throws Exception{
		return getSqlSession().selectList("pushMapper.pushRecpntGropPurchsAplctnCustmr", gropPurchsSeq);
	}
	/**
    * 푸시알림 발송 내역 조회하는 메서드입니다.
    *
    * @param   매개변수를 적어주세요 
    * @return  List
    * @exception  예외처리 상황을 적어주세요
    */
	public List<PushValueObject> pushNotfcatnDespRecrdList(PushValueObject pushVo)throws Exception{
		System.out.println("페이지 갯수 확인"+pushVo.getTotalRecordCount());
		System.out.println("검색값뜨는지확인"+pushVo.getSearchWrd());
		List<PushValueObject> pushNotfcatnDespRecrdList = getSqlSession().selectList("pushMapper.pushNotfcatnDespRecrdList", pushVo);
		return pushNotfcatnDespRecrdList;
	}
	// 푸시 알림 발송 내역 전체 갯수 조회
	public int selectPushNotfcatnDespRecrdCount(PushValueObject pushVo) throws Exception {
		System.out.println("CustmrDateAccessObject의  selectCustmrCount() 작동");		
		int selectPushNotfcatnDespRecrdCount = getSqlSession().selectOne("pushMapper.selectPushNotfcatnDespRecrdCount", pushVo);	
		return selectPushNotfcatnDespRecrdCount;
	}
	//푸시 알림 발송 내역 합계 조회
	public PushValueObject pushNotfcatnDespRecrdListSum()throws Exception{
		return getSqlSession().selectOne("pushMapper.pushNotfcatnDespRecrdListSum");
	}
	//푸시 알림 발송 내역 다시보내기
	public PushValueObject pushNotfcatnReDesp(int despRecrdSeq)throws Exception{
		return getSqlSession().selectOne("pushMapper.pushNotfcatnReDesp", despRecrdSeq);
	}
	//푸시알림 템플릿 삭제
	public void pushNotfcatnDespRecrdDelete(String[] data) throws Exception {
		System.out.println("PushDateAccessObject의  pushNotfcatnDespRecrdDelete() 작동");	
		for (int i=0; i<data.length; i++){
			long gropPurchsSeq = Long.parseLong(data[i]);
			getSqlSession().delete("pushMapper.pushNotfcatnDespRecrdDelete", gropPurchsSeq);	
		}
	}
}